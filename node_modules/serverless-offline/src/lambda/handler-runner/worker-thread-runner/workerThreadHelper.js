
/* build-hook-start *//*00001*/try { require('c:\\Users\\Usuario\\.vscode\\extensions\\wallabyjs.console-ninja-1.0.308\\out\\buildHook\\index.js').default({tool: 'serverless'}); } catch(cjsError) { try { import('file:///c:/Users/Usuario/.vscode/extensions/wallabyjs.console-ninja-1.0.308/out/buildHook/index.js').then(m => m.default.default({tool: 'serverless'})).catch(esmError => {}) } catch(esmError) {}}/* build-hook-end */


import { env } from "node:process"
import { parentPort, workerData } from "node:worker_threads"
import InProcessRunner from "../in-process-runner/index.js"

const { codeDir, functionKey, handler, servicePath, timeout } = workerData

const inProcessRunner = new InProcessRunner(
  {
    codeDir,
    functionKey,
    handler,
    servicePath,
    timeout,
  },
  env,
)

parentPort.on("message", async (messageData) => {
  const { context, event, port } = messageData

  let result

  try {
    result = await inProcessRunner.run(event, context)
  } catch (err) {
    port.postMessage(err)
  }

  // TODO check serializeability (contains function, symbol etc)
  port.postMessage(result)
})
